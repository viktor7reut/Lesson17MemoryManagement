//
//  Information.swift
//  Operation
//
//  Created by Виктор Реут on 11.05.24.
//

//operatio queue - инстурмент который позволяет управлять многопоточностью (высокоуровневый инструмент). Своебразная обертка над grand central dispatch. Суть заключается в обстракции задачи, которую необходимо выполнить. Ключевый объектом обстракции являются операции.

//* в gcd можно отменить операции только те, которые стоят в очереди.

// ключевое отличие - одноразовость. каждая операция предназначана только для одного выполнения экземпляра задачи за один жизненный цикл. Повторное выполнения этой же задачи не предполагается.

// преимущество перед gcd - у каждой операции есть свой жизненный цикл, + инструментарий который позволяет им управлять.

// Состояния в operations:
// 1) Pending - когда операция запланирована для выполнения в очереди, или ждет выполнения зависимых задач (может быть отменена)
// 2) Ready - операция готова к выполнению. Когда все зависимые оперции выполнены, либо когда операция ожидает своей очереди в operation queue (может быть отменена)
// 3) Executing - операция выполняется. Когда поток взял задачу на выполнение (может быть отменена)
// 4) Finished - операция выполнена. Статус завершенная.

// Триггеры состояний:
// 1) isReady - свойство которое определяет готовность операции к выполнению или нахождения в состоянии pending (bool свойство)
// 2) isAsynchronius - указывает является ли операция асинхронной. (В синхронной очереди мы блокируем очередь из которой происходит вызов, и ожидаем выполнения в парралельной очереди, Ассинхронная - не блокируемся, сложная операция в парралельном потоке выполняется сама собой, а основной поток работает себе)
// 3) isExecuting - свойство определяющие находится ли операция в состоянии исполнения, в процессе исполнения или нет (bool)
// 4) isFinished - свойство определяющие находится ли операция в состоянии выполнена (bool)
// 5) isCancelled - свойство определяющие была ли операция отменена (bool)

// 2 основный метода:
// Main - обстрактный метод, переопределение которого позаоляет определить основную функциональность операции (внутри кода тяжелая задача)
// Start - принудительный запуск операции


// для каждой операции мы можем добавить в качестве зависимости другую операцию. порядок операций (цепочка)

// 2 метода addDependency, removeDependency

// completion block - блок кода который выполнится после завершения операции.
